// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/task/task_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	task "github.com/ansidev/togo/domain/task"
	user "github.com/ansidev/togo/domain/user"
	gomock "github.com/golang/mock/gomock"
)

// MockITaskRepository is a mock of ITaskRepository interface.
type MockITaskRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITaskRepositoryMockRecorder
}

// MockITaskRepositoryMockRecorder is the mock recorder for MockITaskRepository.
type MockITaskRepositoryMockRecorder struct {
	mock *MockITaskRepository
}

// NewMockITaskRepository creates a new mock instance.
func NewMockITaskRepository(ctrl *gomock.Controller) *MockITaskRepository {
	mock := &MockITaskRepository{ctrl: ctrl}
	mock.recorder = &MockITaskRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITaskRepository) EXPECT() *MockITaskRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockITaskRepository) Create(taskModel task.Task, userModel user.User) (task.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", taskModel, userModel)
	ret0, _ := ret[0].(task.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockITaskRepositoryMockRecorder) Create(taskModel, userModel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockITaskRepository)(nil).Create), taskModel, userModel)
}

// GetTotalTasksByUserAndDate mocks base method.
func (m *MockITaskRepository) GetTotalTasksByUserAndDate(userModel user.User, date time.Time) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalTasksByUserAndDate", userModel, date)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalTasksByUserAndDate indicates an expected call of GetTotalTasksByUserAndDate.
func (mr *MockITaskRepositoryMockRecorder) GetTotalTasksByUserAndDate(userModel, date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalTasksByUserAndDate", reflect.TypeOf((*MockITaskRepository)(nil).GetTotalTasksByUserAndDate), userModel, date)
}
