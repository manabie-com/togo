// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/manabie-com/backend/services/task (interfaces: I_TaskService)

// Package mock_task is a generated GoMock package.
package mock_task

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/manabie-com/backend/entity"
	utils "github.com/manabie-com/backend/utils"
)

// MockI_TaskService is a mock of I_TaskService interface.
type MockI_TaskService struct {
	ctrl     *gomock.Controller
	recorder *MockI_TaskServiceMockRecorder
}

// MockI_TaskServiceMockRecorder is the mock recorder for MockI_TaskService.
type MockI_TaskServiceMockRecorder struct {
	mock *MockI_TaskService
}

// NewMockI_TaskService creates a new mock instance.
func NewMockI_TaskService(ctrl *gomock.Controller) *MockI_TaskService {
	mock := &MockI_TaskService{ctrl: ctrl}
	mock.recorder = &MockI_TaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockI_TaskService) EXPECT() *MockI_TaskServiceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockI_TaskService) CreateTask(arg0 *entity.Task) (*entity.Task, *utils.ErrorRest) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", arg0)
	ret0, _ := ret[0].(*entity.Task)
	ret1, _ := ret[1].(*utils.ErrorRest)
	return ret0, ret1
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockI_TaskServiceMockRecorder) CreateTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockI_TaskService)(nil).CreateTask), arg0)
}

// DeleteTask mocks base method.
func (m *MockI_TaskService) DeleteTask(arg0 string) *utils.ErrorRest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTask", arg0)
	ret0, _ := ret[0].(*utils.ErrorRest)
	return ret0
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockI_TaskServiceMockRecorder) DeleteTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockI_TaskService)(nil).DeleteTask), arg0)
}

// GetTaskAll mocks base method.
func (m *MockI_TaskService) GetTaskAll() ([]entity.Task, *utils.ErrorRest) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskAll")
	ret0, _ := ret[0].([]entity.Task)
	ret1, _ := ret[1].(*utils.ErrorRest)
	return ret0, ret1
}

// GetTaskAll indicates an expected call of GetTaskAll.
func (mr *MockI_TaskServiceMockRecorder) GetTaskAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskAll", reflect.TypeOf((*MockI_TaskService)(nil).GetTaskAll))
}

// UpdateTask mocks base method.
func (m *MockI_TaskService) UpdateTask(arg0 *entity.Task) (*entity.Task, *utils.ErrorRest) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", arg0)
	ret0, _ := ret[0].(*entity.Task)
	ret1, _ := ret[1].(*utils.ErrorRest)
	return ret0, ret1
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockI_TaskServiceMockRecorder) UpdateTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockI_TaskService)(nil).UpdateTask), arg0)
}
