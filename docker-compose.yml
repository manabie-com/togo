version: '3.8'

services:
  api:
    container_name: togo-api
    build:
      context: .
    image: togo-api:qa
    ports:
      - "5050:5050"
    links:
      - postgres
      - redis
    environment:
      # Server
      - NODE_ENV=development
      - SERVER_ENV=development
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5050
      - SERVER_MODE=cluster
      # Database
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=togo-postgres
      - DB_PORT=5432
      - DB_NAME=togodb
      - DB_DEBUG=false
      # Cache
      - CACHE_HOST=togo-redis
      - CACHE_PORT=6379
      - CACHE_PASS=
      # JWT
      - JWT_AUTH_SECRET_KEY=NAXernFZBA4DkLMdDk14yRtE5rrmQXnw
      - JWT_AUTH_EXPIRATION=31536000
    restart: unless-stopped
    networks:
      - togo-network

  postgres:
    container_name: togo-postgres
    image: postgres:10.4
    ports:
      - "5432:5432"
    volumes:
      - .docker/postgres/data:/var/lib/postgresql/data
      - ./migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: togodb
    networks:
      - togo-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - .docker/pgadmin-data:/var/lib/pgadmin
    networks:
      - togo-network
    depends_on:
      - postgres

  redis:
    container_name: togo-redis
    image: redis:6.0.5
    ports:
      - '6379:6379'
    volumes:
      - .docker/redis/data:/data
    restart: always
    networks:
      - togo-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

# Docker Networks
networks:
  togo-network:
    name: togo-network
    driver: bridge
