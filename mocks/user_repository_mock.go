// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/valonekowd/togo/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// UserRepositoryMock is an autogenerated mock type for the UserDataSource type
type UserRepositoryMock struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, u
func (_m *UserRepositoryMock) Add(ctx context.Context, u *entity.User) error {
	ret := _m.Called(ctx, u)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.User) error); ok {
		r0 = rf(ctx, u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByEmail provides a mock function with given fields: ctx, email
func (_m *UserRepositoryMock) FindByEmail(ctx context.Context, email string) (*entity.User, error) {
	ret := _m.Called(ctx, email)

	var r0 *entity.User
	if rf, ok := ret.Get(0).(func(context.Context, string) *entity.User); ok {
		r0 = rf(ctx, email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
