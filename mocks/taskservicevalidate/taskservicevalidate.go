// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/manabie-com/backend/services/task (interfaces: I_TaskServiceValidate)

// Package mock_task is a generated GoMock package.
package mock_task

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/manabie-com/backend/entity"
	utils "github.com/manabie-com/backend/utils"
)

// MockI_TaskServiceValidate is a mock of I_TaskServiceValidate interface.
type MockI_TaskServiceValidate struct {
	ctrl     *gomock.Controller
	recorder *MockI_TaskServiceValidateMockRecorder
}

// MockI_TaskServiceValidateMockRecorder is the mock recorder for MockI_TaskServiceValidate.
type MockI_TaskServiceValidateMockRecorder struct {
	mock *MockI_TaskServiceValidate
}

// NewMockI_TaskServiceValidate creates a new mock instance.
func NewMockI_TaskServiceValidate(ctrl *gomock.Controller) *MockI_TaskServiceValidate {
	mock := &MockI_TaskServiceValidate{ctrl: ctrl}
	mock.recorder = &MockI_TaskServiceValidateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockI_TaskServiceValidate) EXPECT() *MockI_TaskServiceValidateMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockI_TaskServiceValidate) Validate(arg0 *entity.Task) *utils.ErrorRest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(*utils.ErrorRest)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockI_TaskServiceValidateMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockI_TaskServiceValidate)(nil).Validate), arg0)
}
