// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/user/user_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	user "github.com/ansidev/togo/domain/user"
	gomock "github.com/golang/mock/gomock"
)

// MockIUserRepository is a mock of IUserRepository interface.
type MockIUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIUserRepositoryMockRecorder
}

// MockIUserRepositoryMockRecorder is the mock recorder for MockIUserRepository.
type MockIUserRepositoryMockRecorder struct {
	mock *MockIUserRepository
}

// NewMockIUserRepository creates a new mock instance.
func NewMockIUserRepository(ctrl *gomock.Controller) *MockIUserRepository {
	mock := &MockIUserRepository{ctrl: ctrl}
	mock.recorder = &MockIUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserRepository) EXPECT() *MockIUserRepositoryMockRecorder {
	return m.recorder
}

// FindFirstByID mocks base method.
func (m *MockIUserRepository) FindFirstByID(id int64) (user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindFirstByID", id)
	ret0, _ := ret[0].(user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindFirstByID indicates an expected call of FindFirstByID.
func (mr *MockIUserRepositoryMockRecorder) FindFirstByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindFirstByID", reflect.TypeOf((*MockIUserRepository)(nil).FindFirstByID), id)
}

// FindFirstByUsername mocks base method.
func (m *MockIUserRepository) FindFirstByUsername(username string) (user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindFirstByUsername", username)
	ret0, _ := ret[0].(user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindFirstByUsername indicates an expected call of FindFirstByUsername.
func (mr *MockIUserRepositoryMockRecorder) FindFirstByUsername(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindFirstByUsername", reflect.TypeOf((*MockIUserRepository)(nil).FindFirstByUsername), username)
}
