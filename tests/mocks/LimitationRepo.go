// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/chi07/todo/internal/model"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// LimitationRepo is an autogenerated mock type for the LimitationRepo type
type LimitationRepo struct {
	mock.Mock
}

// GetByUserID provides a mock function with given fields: ctx, userID
func (_m *LimitationRepo) GetByUserID(ctx context.Context, userID uuid.UUID) (*model.Limitation, error) {
	ret := _m.Called(ctx, userID)

	var r0 *model.Limitation
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) *model.Limitation); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Limitation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
