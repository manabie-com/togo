// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	storages "github.com/manabie-com/togo/internal/storages"
	mock "github.com/stretchr/testify/mock"

	tools "github.com/manabie-com/togo/internal/tools"
)

// ITaskRepo is an autogenerated mock type for the ITaskRepo type
type ITaskRepo struct {
	mock.Mock
}

// AddTaskStore provides a mock function with given fields: ctx, arg
func (_m *ITaskRepo) AddTaskStore(ctx context.Context, arg storages.AddTaskParams) *tools.TodoError {
	ret := _m.Called(ctx, arg)

	var r0 *tools.TodoError
	if rf, ok := ret.Get(0).(func(context.Context, storages.AddTaskParams) *tools.TodoError); ok {
		r0 = rf(ctx, arg)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*tools.TodoError)
		}
	}

	return r0
}

// RetrieveTasksStore provides a mock function with given fields: ctx, arg
func (_m *ITaskRepo) RetrieveTasksStore(ctx context.Context, arg storages.RetrieveTasksParams) ([]storages.Task, *tools.TodoError) {
	ret := _m.Called(ctx, arg)

	var r0 []storages.Task
	if rf, ok := ret.Get(0).(func(context.Context, storages.RetrieveTasksParams) []storages.Task); ok {
		r0 = rf(ctx, arg)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]storages.Task)
		}
	}

	var r1 *tools.TodoError
	if rf, ok := ret.Get(1).(func(context.Context, storages.RetrieveTasksParams) *tools.TodoError); ok {
		r1 = rf(ctx, arg)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*tools.TodoError)
		}
	}

	return r0, r1
}
