// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/manabie-com/togo/internal/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// TaskUseCase is an autogenerated mock type for the TaskUseCase type
type TaskUseCase struct {
	mock.Mock
}

// CreateTask provides a mock function with given fields: ctx, content, username
func (_m *TaskUseCase) CreateTask(ctx context.Context, content string, username string) error {
	ret := _m.Called(ctx, content, username)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, content, username)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetTask provides a mock function with given fields: ctx, username, date
func (_m *TaskUseCase) GetTask(ctx context.Context, username string, date string) ([]entity.Task, error) {
	ret := _m.Called(ctx, username, date)

	var r0 []entity.Task
	if rf, ok := ret.Get(0).(func(context.Context, string, string) []entity.Task); ok {
		r0 = rf(ctx, username, date)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, username, date)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
