// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/manabie-com/togo/internal/api/task/storages (interfaces: Store)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storages "github.com/manabie-com/togo/internal/api/task/storages"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// AddTask mocks base method.
func (m *MockStore) AddTask(arg0 context.Context, arg1 *storages.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTask", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTask indicates an expected call of AddTask.
func (mr *MockStoreMockRecorder) AddTask(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTask", reflect.TypeOf((*MockStore)(nil).AddTask), arg0, arg1)
}

// RetrieveTasks mocks base method.
func (m *MockStore) RetrieveTasks(arg0 context.Context, arg1, arg2 string, arg3, arg4 int) ([]*storages.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveTasks", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]*storages.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveTasks indicates an expected call of RetrieveTasks.
func (mr *MockStoreMockRecorder) RetrieveTasks(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveTasks", reflect.TypeOf((*MockStore)(nil).RetrieveTasks), arg0, arg1, arg2, arg3, arg4)
}
