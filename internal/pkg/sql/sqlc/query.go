// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	AssignTask(ctx context.Context, arg *AssignTaskParams) (*Task, error)
	CountTaskByAssigneeToday(ctx context.Context, assignee sql.NullString) (int64, error)
	CreateLimit(ctx context.Context, arg *CreateLimitParams) (*Limit, error)
	CreateTask(ctx context.Context, arg *CreateTaskParams) (*Task, error)
	CreateTier(ctx context.Context, arg *CreateTierParams) (*Tier, error)
	CreateUser(ctx context.Context, arg *CreateUserParams) (*User, error)
	DeleteLimit(ctx context.Context, arg *DeleteLimitParams) error
	DeleteTask(ctx context.Context, id int32) error
	DeleteTier(ctx context.Context, id int16) error
	DeleteUser(ctx context.Context, username string) error
	GetLimit(ctx context.Context, arg *GetLimitParams) (*Limit, error)
	GetTask(ctx context.Context, id int32) (*Task, error)
	GetTier(ctx context.Context, id int16) (*Tier, error)
	GetUserByName(ctx context.Context, username string) (*User, error)
	ListLimits(ctx context.Context, arg *ListLimitsParams) ([]*Limit, error)
	ListTasks(ctx context.Context, arg *ListTasksParams) ([]*Task, error)
	ListTiers(ctx context.Context, arg *ListTiersParams) ([]*Tier, error)
	ListUsers(ctx context.Context, arg *ListUsersParams) ([]*User, error)
	UpdateUserTier(ctx context.Context, arg *UpdateUserTierParams) (*User, error)
}

var _ Querier = (*Queries)(nil)
