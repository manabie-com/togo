// Code generated by mockery v1.0.0. DO NOT EDIT.

package record

import (
	"time"

	mock "github.com/stretchr/testify/mock"
)

// mockRepository is an autogenerated mock type for the Repository type
type mockRepository struct {
	mock.Mock
}

// InsertUserTask provides a mock function with given fields: userId, record, updatedAt
func (_m *mockRepository) InsertUserTask(userId, task string, updatedAt time.Time) error {
	ret := _m.Called(userId, task, updatedAt)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, time.Time) error); ok {
		r0 = rf(userId, task, updatedAt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUserConfig provides a mock function with given fields: userId
func (_m *mockRepository) GetUserConfig(userId string) (*UserConfig, error) {
	ret := _m.Called(userId)

	var r0 *UserConfig
	if rf, ok := ret.Get(0).(func(string) *UserConfig); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UserConfig)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}