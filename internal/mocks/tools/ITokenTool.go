// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	tools "github.com/manabie-com/togo/internal/tools"
	mock "github.com/stretchr/testify/mock"
)

// ITokenTool is an autogenerated mock type for the ITokenTool type
type ITokenTool struct {
	mock.Mock
}

// ClaimToken provides a mock function with given fields: token, JWTKey
func (_m *ITokenTool) ClaimToken(token string, JWTKey string) (string, *tools.TodoError) {
	ret := _m.Called(token, JWTKey)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(token, JWTKey)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 *tools.TodoError
	if rf, ok := ret.Get(1).(func(string, string) *tools.TodoError); ok {
		r1 = rf(token, JWTKey)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*tools.TodoError)
		}
	}

	return r0, r1
}

// CreateToken provides a mock function with given fields: id, JWTKey
func (_m *ITokenTool) CreateToken(id string, JWTKey string) (string, *tools.TodoError) {
	ret := _m.Called(id, JWTKey)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(id, JWTKey)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 *tools.TodoError
	if rf, ok := ret.Get(1).(func(string, string) *tools.TodoError); ok {
		r1 = rf(id, JWTKey)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*tools.TodoError)
		}
	}

	return r0, r1
}

// GetToken provides a mock function with given fields: req
func (_m *ITokenTool) GetToken(req *http.Request) string {
	ret := _m.Called(req)

	var r0 string
	if rf, ok := ret.Get(0).(func(*http.Request) string); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
