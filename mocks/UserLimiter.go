// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	rate "golang.org/x/time/rate"
)

// UserLimiter is an autogenerated mock type for the UserLimiter type
type UserLimiter struct {
	mock.Mock
}

// AddUser provides a mock function with given fields: userID
func (_m *UserLimiter) AddUser(userID string) *rate.Limiter {
	ret := _m.Called(userID)

	var r0 *rate.Limiter
	if rf, ok := ret.Get(0).(func(string) *rate.Limiter); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rate.Limiter)
		}
	}

	return r0
}

// GetLimiter provides a mock function with given fields: userID
func (_m *UserLimiter) GetLimiter(userID string) *rate.Limiter {
	ret := _m.Called(userID)

	var r0 *rate.Limiter
	if rf, ok := ret.Get(0).(func(string) *rate.Limiter); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rate.Limiter)
		}
	}

	return r0
}
