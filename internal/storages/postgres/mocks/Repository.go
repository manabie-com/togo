// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	model "github.com/manabie-com/togo/pkg/model"
	mock "github.com/stretchr/testify/mock"

	postgres "github.com/manabie-com/togo/internal/storages/postgres"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// FindTask provides a mock function with given fields: filter
func (_m *Repository) FindTask(filter postgres.TaskFilter) ([]model.Task, error) {
	ret := _m.Called(filter)

	var r0 []model.Task
	if rf, ok := ret.Get(0).(func(postgres.TaskFilter) []model.Task); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(postgres.TaskFilter) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUser provides a mock function with given fields: userName
func (_m *Repository) GetUser(userName string) (*model.User, error) {
	ret := _m.Called(userName)

	var r0 *model.User
	if rf, ok := ret.Get(0).(func(string) *model.User); ok {
		r0 = rf(userName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveTask provides a mock function with given fields: task
func (_m *Repository) SaveTask(task *model.Task) error {
	ret := _m.Called(task)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Task) error); ok {
		r0 = rf(task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveUser provides a mock function with given fields: user
func (_m *Repository) SaveUser(user *model.User) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
