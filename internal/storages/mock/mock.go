// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/surw/togo/internal/services (interfaces: ILiteDB)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storages "github.com/surw/togo/internal/storages"
)

// MockILiteDB is a mock of ILiteDB interface.
type MockILiteDB struct {
	ctrl     *gomock.Controller
	recorder *MockILiteDBMockRecorder
}

// MockILiteDBMockRecorder is the mock recorder for MockILiteDB.
type MockILiteDBMockRecorder struct {
	mock *MockILiteDB
}

// NewMockILiteDB creates a new mock instance.
func NewMockILiteDB(ctrl *gomock.Controller) *MockILiteDB {
	mock := &MockILiteDB{ctrl: ctrl}
	mock.recorder = &MockILiteDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILiteDB) EXPECT() *MockILiteDBMockRecorder {
	return m.recorder
}

// AddTask mocks base method.
func (m *MockILiteDB) AddTask(arg0 context.Context, arg1 *storages.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTask", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddTask indicates an expected call of AddTask.
func (mr *MockILiteDBMockRecorder) AddTask(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTask", reflect.TypeOf((*MockILiteDB)(nil).AddTask), arg0, arg1)
}

// RetrieveTasks mocks base method.
func (m *MockILiteDB) RetrieveTasks(arg0 context.Context, arg1, arg2 sql.NullString) ([]*storages.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveTasks", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*storages.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveTasks indicates an expected call of RetrieveTasks.
func (mr *MockILiteDBMockRecorder) RetrieveTasks(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveTasks", reflect.TypeOf((*MockILiteDB)(nil).RetrieveTasks), arg0, arg1, arg2)
}

// ValidateUser mocks base method.
func (m *MockILiteDB) ValidateUser(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUser", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateUser indicates an expected call of ValidateUser.
func (mr *MockILiteDBMockRecorder) ValidateUser(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUser", reflect.TypeOf((*MockILiteDB)(nil).ValidateUser), arg0, arg1, arg2)
}
