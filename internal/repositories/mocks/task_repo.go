// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	repositories "github.com/manabie-com/togo/internal/repositories"
	mock "github.com/stretchr/testify/mock"
)

// TaskRepo is an autogenerated mock type for the TaskRepo type
type TaskRepo struct {
	mock.Mock
}

// AddTask provides a mock function with given fields: task
func (_m *TaskRepo) AddTask(task *repositories.Task) (*repositories.Task, error) {
	ret := _m.Called(task)

	var r0 *repositories.Task
	if rf, ok := ret.Get(0).(func(*repositories.Task) *repositories.Task); ok {
		r0 = rf(task)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*repositories.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*repositories.Task) error); ok {
		r1 = rf(task)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTasks provides a mock function with given fields: userID, createdAt
func (_m *TaskRepo) ListTasks(userID string, createdAt string) (*[]repositories.Task, error) {
	ret := _m.Called(userID, createdAt)

	var r0 *[]repositories.Task
	if rf, ok := ret.Get(0).(func(string, string) *[]repositories.Task); ok {
		r0 = rf(userID, createdAt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]repositories.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(userID, createdAt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
