// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	sql "database/sql"

	mock "github.com/stretchr/testify/mock"

	storages "github.com/manabie-com/togo/internal/storages"
)

// TaskService is an autogenerated mock type for the TaskService type
type TaskService struct {
	mock.Mock
}

// AddTask provides a mock function with given fields: t, email
func (_m *TaskService) AddTask(t *storages.Task, email string) error {
	ret := _m.Called(t, email)

	var r0 error
	if rf, ok := ret.Get(0).(func(*storages.Task, string) error); ok {
		r0 = rf(t, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteTask provides a mock function with given fields: id
func (_m *TaskService) DeleteTask(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUserFromEmail provides a mock function with given fields: email
func (_m *TaskService) GetUserFromEmail(email string) (*storages.User, error) {
	ret := _m.Called(email)

	var r0 *storages.User
	if rf, ok := ret.Get(0).(func(string) *storages.User); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storages.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveTasks provides a mock function with given fields: userID, createdDate
func (_m *TaskService) RetrieveTasks(userID sql.NullString, createdDate sql.NullString) ([]*storages.Task, error) {
	ret := _m.Called(userID, createdDate)

	var r0 []*storages.Task
	if rf, ok := ret.Get(0).(func(sql.NullString, sql.NullString) []*storages.Task); ok {
		r0 = rf(userID, createdDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*storages.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(sql.NullString, sql.NullString) error); ok {
		r1 = rf(userID, createdDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTask provides a mock function with given fields: task
func (_m *TaskService) UpdateTask(task *storages.Task) error {
	ret := _m.Called(task)

	var r0 error
	if rf, ok := ret.Get(0).(func(*storages.Task) error); ok {
		r0 = rf(task)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateUser provides a mock function with given fields: email, pwd
func (_m *TaskService) ValidateUser(email sql.NullString, pwd sql.NullString) bool {
	ret := _m.Called(email, pwd)

	var r0 bool
	if rf, ok := ret.Get(0).(func(sql.NullString, sql.NullString) bool); ok {
		r0 = rf(email, pwd)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
