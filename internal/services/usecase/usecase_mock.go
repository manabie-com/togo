// Code generated by MockGen. DO NOT EDIT.
// Source: bairesdev_final_project/internal/service (interfaces: QuestionServiceInterface)

// Package service is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	"github.com/manabie-com/togo/internal/app/models"
)

// MockUsecaseInterface is a mock of QuestionServiceInterface interface
type MockUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseInterfaceMockRecorder
}

// MockUsecaseInterfaceMockRecorder is the mock recorder for MockUsecaseInterface
type MockUsecaseInterfaceMockRecorder struct {
	mock *MockUsecaseInterface
}

// NewMockUsecaseInterface creates a new mock instance
func NewMockUsecaseInterface(ctrl *gomock.Controller) *MockUsecaseInterface {
	mock := &MockUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsecaseInterface) EXPECT() *MockUsecaseInterfaceMockRecorder {
	return m.recorder
}

// GetAuthToken mocks base method
func (m *MockUsecaseInterface) GetAuthToken(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthToken indicates an expected call of GetAuthToken
func (mr *MockUsecaseInterfaceMockRecorder) GetAuthToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthToken", reflect.TypeOf((*MockUsecaseInterface)(nil).GetAuthToken), arg0, arg1, arg2)
}

// RetrieveTasks mocks base method
func (m *MockUsecaseInterface) RetrieveTasks(arg0 context.Context, arg1 uint64, arg2 string) ([]*models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveTasks", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveTasks indicates an expected call of RetrieveTasks
func (mr *MockUsecaseInterfaceMockRecorder) RetrieveTasks(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveTasks", reflect.TypeOf((*MockUsecaseInterface)(nil).RetrieveTasks), arg0, arg1, arg2)
}

// AddTask mocks base method
func (m *MockUsecaseInterface) AddTask(arg0 context.Context, arg1 uint64, arg2 *models.Task) (*models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTask", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTask indicates an expected call of AddTask
func (mr *MockUsecaseInterfaceMockRecorder) AddTask(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTask", reflect.TypeOf((*MockUsecaseInterface)(nil).AddTask), arg0, arg1, arg2)
}
