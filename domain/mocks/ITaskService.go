// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	testing "testing"
	domain "togo/domain"

	mock "github.com/stretchr/testify/mock"
)

// ITaskService is an autogenerated mock type for the ITaskService type
type ITaskService struct {
	mock.Mock
}

// Create provides a mock function with given fields: params
func (_m *ITaskService) Create(params domain.TaskParams) (domain.Task, error) {
	ret := _m.Called(params)

	var r0 domain.Task
	if rf, ok := ret.Get(0).(func(domain.TaskParams) domain.Task); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Get(0).(domain.Task)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.TaskParams) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewITaskService creates a new instance of ITaskService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewITaskService(t testing.TB) *ITaskService {
	mock := &ITaskService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
