// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/valonekowd/togo/domain/entity"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// TaskRepositoryMock is an autogenerated mock type for the TaskDataSource type
type TaskRepositoryMock struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, t
func (_m *TaskRepositoryMock) Add(ctx context.Context, t *entity.Task) error {
	ret := _m.Called(ctx, t)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Task) error); ok {
		r0 = rf(ctx, t)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields: ctx, userID, createdDate
func (_m *TaskRepositoryMock) List(ctx context.Context, userID string, createdDate time.Time) ([]*entity.Task, error) {
	ret := _m.Called(ctx, userID, createdDate)

	var r0 []*entity.Task
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Time) []*entity.Task); ok {
		r0 = rf(ctx, userID, createdDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, time.Time) error); ok {
		r1 = rf(ctx, userID, createdDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
