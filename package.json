{
  "name": "togo",
  "version": "1.0.0",
  "description": "- Implement one single API which accepts a todo task and records it   - There is a maximum **limit of N tasks per user** that can be added **per day**.   - Different users can have **different** maximum daily limit. - Write integration (functional) tests - Write unit tests - Choose a suitable architecture to make your code simple, organizable, and maintainable - Using Docker to run locally   - Using Docker for database (if used) is mandatory. - Write a concise README   - How to run your code locally?   - A sample “curl” command to call your API   - How to run your unit tests locally?   - What do you love about your solution?   - What else do you want us to know about however you do not have enough time to complete?",
  "main": "./bin/server.js",
  "scripts": {
    "build": "npx tsc",
    "start": "node ./bin/server.js",
    "dev": "concurrently \"npx tsc --watch\" \"nodemon -q ./bin/server.js\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vindecodex/togo.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/vindecodex/togo/issues"
  },
  "homepage": "https://github.com/vindecodex/togo#readme",
  "dependencies": {
    "body-parser": "^1.20.0",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "mysql": "^2.18.1",
    "reflect-metadata": "^0.1.13",
    "typeorm": "^0.3.7"
  },
  "devDependencies": {
    "@types/express": "^4.17.13",
    "@types/mysql": "^2.15.21",
    "@types/node": "^18.0.6",
    "concurrently": "^7.3.0",
    "nodemon": "^2.0.19",
    "typescript": "^4.7.4"
  }
}
