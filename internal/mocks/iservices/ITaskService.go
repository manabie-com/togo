// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	iservices "github.com/manabie-com/togo/internal/iservices"
	mock "github.com/stretchr/testify/mock"

	tools "github.com/manabie-com/togo/internal/tools"
)

// ITaskService is an autogenerated mock type for the ITaskService type
type ITaskService struct {
	mock.Mock
}

// AddTask provides a mock function with given fields: ctx, request
func (_m *ITaskService) AddTask(ctx context.Context, request iservices.AddTaskRequest) (*iservices.AddTaskResponse, *tools.TodoError) {
	ret := _m.Called(ctx, request)

	var r0 *iservices.AddTaskResponse
	if rf, ok := ret.Get(0).(func(context.Context, iservices.AddTaskRequest) *iservices.AddTaskResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iservices.AddTaskResponse)
		}
	}

	var r1 *tools.TodoError
	if rf, ok := ret.Get(1).(func(context.Context, iservices.AddTaskRequest) *tools.TodoError); ok {
		r1 = rf(ctx, request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*tools.TodoError)
		}
	}

	return r0, r1
}

// ListTasksByUserAndDate provides a mock function with given fields: ctx, request
func (_m *ITaskService) ListTasksByUserAndDate(ctx context.Context, request iservices.ListTaskRequest) (*iservices.ListTaskResponse, *tools.TodoError) {
	ret := _m.Called(ctx, request)

	var r0 *iservices.ListTaskResponse
	if rf, ok := ret.Get(0).(func(context.Context, iservices.ListTaskRequest) *iservices.ListTaskResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iservices.ListTaskResponse)
		}
	}

	var r1 *tools.TodoError
	if rf, ok := ret.Get(1).(func(context.Context, iservices.ListTaskRequest) *tools.TodoError); ok {
		r1 = rf(ctx, request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*tools.TodoError)
		}
	}

	return r0, r1
}
