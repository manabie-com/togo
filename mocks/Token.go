// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"

	token "github.com/manabie-com/togo/pkg/token"
)

// Token is an autogenerated mock type for the Token type
type Token struct {
	mock.Mock
}

// CreateToken provides a mock function with given fields: username, duration
func (_m *Token) CreateToken(username string, duration time.Duration) (string, error) {
	ret := _m.Called(username, duration)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, time.Duration) string); ok {
		r0 = rf(username, duration)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, time.Duration) error); ok {
		r1 = rf(username, duration)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyToken provides a mock function with given fields: _a0
func (_m *Token) VerifyToken(_a0 string) (*token.Payload, error) {
	ret := _m.Called(_a0)

	var r0 *token.Payload
	if rf, ok := ret.Get(0).(func(string) *token.Payload); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*token.Payload)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
